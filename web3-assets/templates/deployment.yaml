apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web3-assets.fullname" . }}
  labels:
    {{- include "web3-assets.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "web3-assets.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "web3-assets.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "web3-assets.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: rclone-init
          image: "{{ .Values.rclone.image.repository }}:{{ .Values.rclone.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: config-volume
            mountPath: /config/rclone
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: W3F_MATRIXBOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "matrix-recorder.fullname" . }}-credentials
                key: matrixbot-username
          - name: W3F_MATRIXBOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "matrix-recorder.fullname" . }}-credentials
                key: matrixbot-password
          command: ["/bin/sh"]
          args: ["-c", "/scripts/init.sh" ]

      containers:
        - name: rclone
          image: "{{ .Values.rclone.image.repository }}:{{ .Values.rclone.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: config-volume
            mountPath: /config/rclone
          - name: data-volume
            mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}


{{ if eq .Values.environment "ci" }}
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: data-volume
        emptyDir: {}
{{ else }}
  volumeClaimTemplates:
  - metadata:
      name: config-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: do-block-storage
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: data-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: do-block-storage
      resources:
        requests:
          storage: 100Gi
{{ end }}
